name: Massive Functional Testing

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  performance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Lighthouse Desktop Tests
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            https://your-test-site.local/
            https://your-test-site.local/shop/
            https://your-test-site.local/checkout/
          configPath: '.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3

      - name: Lighthouse Mobile Tests
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            https://your-test-site.local/
            https://your-test-site.local/shop/
            https://your-test-site.local/checkout/
          configPath: '.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3
          mobile: true

      - name: Load Testing
        run: |
          npm install -g artillery
          artillery run load-tests.yml

  unit-tests:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mysqli, zip, gd, intl
          coverage: xdebug

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress

      - name: Run PHP Unit Tests
        run: |
          vendor/bin/phpunit --configuration phpunit.xml --coverage-clover coverage.xml
          bash <(curl -s https://codecov.io/bash)

      - name: Run JavaScript Tests
        run: |
          npm install
          npm test

  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies
        run: npm install

      - name: Run Cypress Tests
        uses: cypress-io/github-action@v5
        with:
          browser: chrome
          record: true
          parallel: true
          group: 'UI Tests'
          spec: |
            cypress/e2e/user-journey-tests.cy.js
            cypress/e2e/theme-tests.cy.js

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mysqli

      - name: Security Scan
        uses: StepSecurity/security-scanner@v1
        with:
          severity: critical,high

      - name: WordPress Security Scan
        run: |
          curl -L https://raw.githubusercontent.com/wpscanteam/wpscan/master/wpscan.rb | ruby
          wpscan --url https://your-test-site.local/ --api-token ${{ secrets.WPSCAN_API_TOKEN }}

  compatibility:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        wordpress: ['latest', '6.0', '5.9']
        woocommerce: ['latest', '7.0', '6.0']
        
    steps:
      - uses: actions/checkout@v3

      - name: Setup WordPress
        run: |
          wp core download --version=${{ matrix.wordpress }}
          wp plugin install woocommerce --version=${{ matrix.woocommerce }}
          wp theme activate tonys-theme

      - name: Run Compatibility Tests
        run: vendor/bin/phpunit --configuration phpunit.xml --testsuite compatibility
