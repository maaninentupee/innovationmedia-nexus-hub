name: Massive Functional Testing

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0'
        extensions: mysqli, zip, gd, intl
        coverage: xdebug

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'

    - name: Install WordPress Test Environment
      run: |
        bash bin/install-wp-tests.sh wordpress_test root password localhost latest true

    - name: Install Composer Dependencies
      run: composer install --prefer-dist --no-progress

    - name: Install Node Dependencies
      run: |
        npm install
        npm install -g @lhci/cli@0.11.x cypress

    - name: Run PHP Syntax Check
      run: |
        find . -name "*.php" -not -path "./vendor/*" -print0 | xargs -0 -n1 php -l

    - name: Run PHPCS
      run: vendor/bin/phpcs --standard=WordPress

    - name: Run PHPUnit Tests
      run: |
        mkdir -p build/logs
        vendor/bin/phpunit --configuration phpunit.xml --coverage-clover build/logs/clover.xml

    - name: Run WordPress Coding Standards
      run: |
        vendor/bin/phpcs --standard=WordPress-Core .
        vendor/bin/phpcs --standard=WordPress-Docs .
        vendor/bin/phpcs --standard=WordPress-Extra .

    - name: Run Security Checks
      run: |
        composer require --dev phpstan/phpstan
        vendor/bin/phpstan analyse -l 5 .

    - name: Run Performance Tests
      run: |
        lhci autorun --collect.url=https://your-test-site.local
        lhci assert --preset=lighthouse:recommended
        lhci upload --target=temporary-public-storage

    - name: Run End-to-End Tests
      run: |
        npm run cypress:install
        npm run cypress:run

    - name: Generate Coverage Reports
      run: |
        vendor/bin/phpunit --coverage-html coverage
        vendor/bin/phpunit --coverage-text

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage/

    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          build/logs/
          cypress/videos/
          cypress/screenshots/
          lighthouse/
